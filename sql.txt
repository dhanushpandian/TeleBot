-- Drop tables if they exist to avoid conflicts during multiple runs
DROP TABLE IF EXISTS ServiceComplaints;
DROP TABLE IF EXISTS Billing;
DROP TABLE IF EXISTS DataUsage;
DROP TABLE IF EXISTS CallRecords;
DROP TABLE IF EXISTS Customers;

-- Create Customers table
CREATE TABLE Customers (
    customer_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    phone_number VARCHAR(15) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    address TEXT,
    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create CallRecords table
CREATE TABLE CallRecords (
    call_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT NOT NULL,
    call_duration INT, -- in seconds
    call_type ENUM('incoming', 'outgoing') NOT NULL,
    call_cost DECIMAL(5,2) NOT NULL,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id) ON DELETE CASCADE
);

-- Create DataUsage table
CREATE TABLE DataUsage (
    usage_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT NOT NULL,
    data_used_mb DECIMAL(8,2) NOT NULL,
    usage_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id) ON DELETE CASCADE
);

-- Create Billing table
CREATE TABLE Billing (
    bill_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT NOT NULL,
    bill_amount DECIMAL(8,2) NOT NULL,
    payment_status ENUM('paid', 'pending', 'overdue') NOT NULL,
    bill_date DATE NOT NULL,
    due_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id) ON DELETE CASCADE
);

-- Create ServiceComplaints table
CREATE TABLE ServiceComplaints (
    complaint_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT NOT NULL,
    issue_type ENUM('network', 'billing', 'service') NOT NULL,
    complaint_text TEXT NOT NULL,
    status ENUM('open', 'in progress', 'resolved') NOT NULL,
    complaint_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id) ON DELETE CASCADE
);

-- Insert sample customers
INSERT INTO Customers (name, phone_number, email, address, registration_date) VALUES
('John Doe', '9876543210', 'john.doe@email.com', '123 Main St, NY', '2024-01-15'),
('Jane Smith', '8765432109', 'jane.smith@email.com', '456 Elm St, CA', '2023-11-20'),
('Michael Brown', '7654321098', 'michael.brown@email.com', '789 Oak St, TX', '2024-02-05'),
('Emily Davis', '6543210987', 'emily.davis@email.com', '101 Pine St, FL', '2023-09-10'),
('David Wilson', '5432109876', 'david.wilson@email.com', '202 Willow St, IL', '2024-03-01');

-- Insert sample call records
INSERT INTO CallRecords (customer_id, call_duration, call_type, call_cost, timestamp) VALUES
(1, 120, 'outgoing', 1.50, '2024-07-01 14:23:00'),
(2, 45, 'incoming', 0.00, '2024-07-02 09:15:30'),
(3, 200, 'outgoing', 2.75, '2024-07-02 18:45:10'),
(4, 30, 'incoming', 0.00, '2024-07-03 08:05:50'),
(5, 90, 'outgoing', 1.00, '2024-07-03 12:30:20');

-- Insert sample data usage records
INSERT INTO DataUsage (customer_id, data_used_mb, usage_date) VALUES
(1, 1500.25, '2024-07-01'),
(2, 700.00, '2024-07-02'),
(3, 3000.75, '2024-07-02'),
(4, 1200.50, '2024-07-03'),
(5, 2500.80, '2024-07-03');

-- Insert sample billing records
INSERT INTO Billing (customer_id, bill_amount, payment_status, bill_date, due_date) VALUES
(1, 50.00, 'paid', '2024-06-01', '2024-06-10'),
(2, 30.00, 'pending', '2024-06-05', '2024-06-15'),
(3, 75.00, 'paid', '2024-06-10', '2024-06-20'),
(4, 40.00, 'overdue', '2024-06-15', '2024-06-25'),
(5, 60.00, 'pending', '2024-06-20', '2024-06-30');

-- Insert sample service complaints
INSERT INTO ServiceComplaints (customer_id, issue_type, complaint_text, status, complaint_date) VALUES
(1, 'network', 'Frequent call drops in my area.', 'open', '2024-07-01 10:05:00'),
(2, 'billing', 'Incorrect charges on my last bill.', 'in progress', '2024-07-02 11:15:30'),
(3, 'service', 'Poor customer service response time.', 'resolved', '2024-07-02 16:45:20'),
(4, 'network', 'Slow mobile data speeds.', 'open', '2024-07-03 09:10:50'),
(5, 'billing', 'My payment is showing as overdue even after paying.', 'in progress', '2024-07-03 14:25:10');
